diff --git a/CMakeLists.txt b/CMakeLists.txt
index 30ed034..9bc4368 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -78,7 +78,6 @@ function(findutil UTIL TRY)
 		PATHS ENV MYPATH
 		PATHS /usr/local/bin /usr/bin /bin
 		PATHS /usr/local/sbin /usr/sbin /sbin
-		NO_DEFAULT_PATH
 	)
 	if (NOT ${UTIL})
 		list(GET TRY 0 util)
@@ -157,8 +156,8 @@ function(makemacros)
 
 	list(GET db_backends 0 DB_BACKEND)
 
-	set(host_cpu ${CMAKE_HOST_SYSTEM_PROCESSOR})
-	string(TOLOWER ${CMAKE_HOST_SYSTEM_NAME} host_os)
+	set(host_cpu "s390x")
+	string(TOLOWER "zos" host_os)
 	set(host_vendor ${RPM_VENDOR})
 	set(host ${host_cpu}-${host_vendor}-${host_os})
 
@@ -196,16 +195,31 @@ set(REQFUNCS
 	mkstemp getcwd basename dirname realpath setenv unsetenv regcomp
 	utimes getline localtime_r statvfs getaddrinfo
 	openat mkdirat fstatat linkat symlinkat mkfifoat mknodat unlinkat
-	renameat utimensat fchmodat fchownat stpcpy stpncpy
+	renameat utimensat fchmodat fchownat
 )
 
 find_package(PkgConfig REQUIRED)
 find_package(Lua 5.2 REQUIRED)
 find_package(ZLIB REQUIRED)
+
 if (WITH_BZIP2)
     find_package(BZip2 REQUIRED)
+    # Check if the target exists, if not create it
+endif()
+
+if(BZip2_FOUND AND NOT TARGET BZip2::BZip2)
+    add_library(BZip2::BZip2 UNKNOWN IMPORTED)
+    set_target_properties(BZip2::BZip2 PROPERTIES
+        IMPORTED_LOCATION "${BZIP2_LIBRARIES}"
+        INTERFACE_INCLUDE_DIRECTORIES "${BZIP2_INCLUDE_DIR}"
+    )
 endif()
+
 if (WITH_ICONV)
+    message(STATUS "LIBICONV_HOME is: ${LIBICONV_HOME}")
+    set(Iconv_INCLUDE_DIR "${LIBICONV_HOME}/include")
+    set(Iconv_LIBRARY "${LIBICONV_HOME}/lib/libiconv.a")  # or .so if shared
+    set(Iconv_FOUND TRUE)
     find_package(Iconv REQUIRED)
 endif()
 
@@ -241,6 +255,7 @@ find_library(MAGIC_LIBRARY NAMES magic REQUIRED)
 find_path(MAGIC_INCLUDE_DIR NAMES magic.h REQUIRED)
 mark_as_advanced(MAGIC_LIBRARY)
 mark_as_advanced(MAGIC_INCLUDE_DIR)
+
 set_target_properties(MAGIC::MAGIC PROPERTIES
 		      IMPORTED_LOCATION "${MAGIC_LIBRARY}")
 target_include_directories(MAGIC::MAGIC INTERFACE "${MAGIC_INCLUDE_DIR}")
@@ -391,7 +406,7 @@ if (LIBDW_FOUND)
 	set(HAVE_LIBDW 1)
 	check_library_exists(dw dwelf_elf_begin "" HAVE_DWELF_ELF_BEGIN)
 endif()
-
+set(HAVE_SETPROGNAME 1)
 check_symbol_exists(GLOB_ONLYDIR "glob.h" HAVE_GLOB_ONLYDIR)
 check_symbol_exists(major "sys/sysmacros.h" MAJOR_IN_SYSMACROS)
 if (NOT MAJOR_IN_SYSMACROS)
@@ -479,8 +494,21 @@ foreach(f macros rpmrc rpmpopt-${PROJECT_VERSION})
 	install(FILES ${CMAKE_BINARY_DIR}/${f} DESTINATION ${RPM_CONFIGDIR})
 endforeach()
 
-if (ENABLE_TESTSUITE)
-	add_subdirectory(tests)
+# Find required programs for tests
+find_program(PODMAN NAMES podman docker)
+find_program(AUTOM4TE autom4te)
+
+if(ENABLE_TESTSUITE)
+    if(NOT PODMAN)
+        message(STATUS "Podman or Docker not found. Test suite will not be enabled.")
+    endif()
+    if(NOT AUTOM4TE)
+        message(STATUS "autom4te not found. Test suite will not be enabled.")
+    endif()
+endif()
+
+if(ENABLE_TESTSUITE AND PODMAN AND AUTOM4TE)
+    add_subdirectory(tests)
 endif()
 
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/rpm.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
@@ -553,7 +581,7 @@ install(FILES
 	DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/rpm
 )
 
-export(TARGETS librpm librpmio librpmbuild librpmsign
+export(TARGETS librpm rpmio librpmbuild librpmsign
 	FILE rpm-targets.cmake
 	NAMESPACE rpm::
 )
